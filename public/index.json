[
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/deploiement-github/",
	"title": "Héberger sur GitHub",
	"tags": ["github", "git", "déploiement", "hébergement"],
	"description": "Page voulue",
	"content": "Attention Page voulue à traduire https://hugodocs.info/hosting-and-deployment/hosting-on-github/ GitHub fournit un hébergement gratuit et rapide sur SSL pour les pages personnelles, d&amp;rsquo;organisation ou projet directement à partir d&amp;rsquo;un dépôt GitHub via son service GitHub Pages. Hypothèses You have Git 2.5 or greater installed on your machine. You have a GitHub account. Signing up for GitHub is free. You have a ready-to-publish Hugo website or have at least completed the Quick Start. If you are working within an Organization account or want to set up a User website on GitHub and would like more information, refer to the GitHub Pages documentation. Make sure your baseURL key-value in your site configuration reflects the full URL of your GitHub pages repository if you’re using the default GH Pages URL (e.g., username.github.io/myprojectname/) and not a custom domain. Déploiement via répertoire /docs Folder sur la Branche Master As described in the GitHub Pages documentation, you can deploy from a folder called docs/ on your master branch. To effectively use this feature with Hugo, you need to change the Hugo publish directory in your site’sconfig.toml and config.yaml, respectively: publishDir: docs publishDir = &amp;quot;docs&amp;quot; Après avoir lancé hugo, poussez votre branche master vers le repo distant et choisissez le répertoire docs/ comme le site web source de votre repo. Faites ce qui suit à partir de votre projet GitHub : Go to Settings → GitHub Pages From Source, select “master branch /docs folder”. If the option isn’t enabled, you likely do not have a docs/ folder in the root of your project. The docs/ option is the simplest approach but requires you set a publish directory in your site configuration. You cannot currently configure GitHub pages to publish from another directory on master, and not everyone prefers the output site live concomitantly with source files in version control. Déploiement à Partir de votre Branche gh-pages You can also tell GitHub pages to treat your master branch as the published site or point to a separate gh-pages branch. The latter approach is a bit more complex but has some advantages: It keeps your source and generated website in different branches and therefore maintains version control history for both. Unlike the preceding docs/ option, it uses the default public folder. __Preparations for gh-pages Branch These steps only need to be done once. Replace upstream with the name of your remote; e.g., origin: Add the Public Folder First, add the public folder to your .gitignore file at the project root so that the directory is ignored on the master branch: echo &amp;quot;public&amp;quot; &amp;gt;&amp;gt; .gitignore Initialiser votre branche gh-pages You can now initialize your gh-pages branch as an empty orphan branch: git checkout --orphan gh-pages git reset --hard git commit --allow-empty -m &amp;quot;Initializing gh-pages branch&amp;quot; git push upstream gh-pages git checkout master Construction et Déploiement Now check out the gh-pages branch into your public folder using git’s worktree feature. Essentially, the worktree allows you to have multiple branches of the same local repository to be checked out in different directories: rm -rf public git worktree add -B gh-pages public upstream/gh-pages Regenerate the site using the hugo command and commit the generated files on the gh-pages branch: commit-gh-pages-files.sh __ COPY hugo cd public &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m &amp;quot;Publishing to gh-pages&amp;quot; &amp;amp;&amp;amp; cd .. If the changes in your local gh-pages branch look alright, push them to the remote repo: git push upstream gh-pages Setting gh-pages as Your Publish Branch In order to use your gh-pages branch as your publishing branch, you’ll need to configure the repository within the GitHub UI. This will likely happen automatically once GitHub realizes you’ve created this branch. You can also set the branch manually from within your GitHub project: Go to Settings → GitHub Pages From Source, select “gh-pages branch” and then Save. If the option isn’t enabled, you likely have not created the branch yet OR you have not pushed the branch from your local machine to the hosted repository on GitHub. After a short while, you’ll see the updated contents on your GitHub Pages site. Putting it Into a Script To automate these steps, you can create a script with the following contents: publish_to_ghpages.sh __ COPY #!/bin/sh DIR=$(dirname &amp;quot;$0&amp;quot;) cd $DIR/.. if [[ $(git status -s) ]] then echo &amp;quot;The working directory is dirty. Please commit any pending changes.&amp;quot; exit 1; fi echo &amp;quot;Deleting old publication&amp;quot; rm -rf public mkdir public git worktree prune rm -rf .git/worktrees/public/ echo &amp;quot;Checking out gh-pages branch into public&amp;quot; git worktree add -B gh-pages public upstream/gh-pages echo &amp;quot;Removing existing files&amp;quot; rm -rf public/* echo &amp;quot;Generating site&amp;quot; hugo echo &amp;quot;Updating gh-pages branch&amp;quot; cd public &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m &amp;quot;Publishing to gh-pages (publish.sh)&amp;quot; This will abort if there are pending changes in the working directory and also makes sure that all previously existing output files are removed. Adjust the script to taste, e.g. to include the final push to the remote repository if you don’t need to take a look at the gh-pages branch before pushing. Or adding echo yourdomainname.com &amp;gt;&amp;gt; CNAME if you set up for your gh-pages to use customize domain. __Deployment From Your master Branch To use master as your publishing branch, you’ll need your rendered website to live at the root of the GitHub repository. Steps should be similar to that of the gh-pages branch, with the exception that you will create your GitHub repository with the public directory as the root. Note that this does not provide the same benefits of the gh-pages branch in keeping your source and output in separate, but version controlled, branches within the same repo. You will also need to set master as your publishable branch from within the GitHub UI: Go to Settings → GitHub Pages From Source, select “master branch” and then Save. __Hosting GitHub User or Organization Pages As mentioned in this GitHub Help article, you can host a user/organization page in addition to project pages. Here are the key differences in GitHub Pages websites for Users and Organizations: You must use the &amp;lt;USERNAME&amp;gt;.github.io naming scheme for your GitHub repo. Content from the master branch will be used to publish your GitHub Pages site. It becomes much simpler in this case: we’ll create two separate repos, one for Hugo’s content, and a git submodule with the public folder’s content in it. __Step-by-step Instructions Create a &amp;lt;YOUR-PROJECT&amp;gt; git repository on GitHub. This repository will contain Hugo’s content and other source files. Create a &amp;lt;USERNAME&amp;gt;.github.io GitHub repository. This is the repository that will contain the fully rendered version of your Hugo website. git clone &amp;lt;YOUR-PROJECT-URL&amp;gt; &amp;amp;&amp;amp; cd &amp;lt;YOUR-PROJECT&amp;gt; Make your website work locally (hugo server or hugo server -t &amp;lt;YOURTHEME&amp;gt;) and open your browser to http://localhost:1313. Once you are happy with the results: Press Ctrl+C to kill the server rm -rf public to completely remove the public directory if there git submodule add -b master git@github.com:&amp;lt;USERNAME&amp;gt;/&amp;lt;USERNAME&amp;gt;.github.io.git public. This creates a git submodule. Now when you run the hugo command to build your site to public, the created public directory will have a different remote origin (i.e. hosted GitHub repository). You can automate some of these steps with the following script. Putting it Into a Script You’re almost done. You can also add a deploy.sh script to automate the preceding steps for you. You can also make it executable with chmod +x deploy.sh. The following are the contents of the deploy.sh script: #!/bin/bash echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot; # Build the project. hugo # if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;` # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=&amp;quot;rebuilding site `date`&amp;quot; if [ $# -eq 1 ] then msg=&amp;quot;$1&amp;quot; fi git commit -m &amp;quot;$msg&amp;quot; # Push source and build repos. git push origin master # Come Back up to the Project Root cd .. You can then run ./deploy.sh &amp;quot;Your optional commit message&amp;quot; to send changes to &amp;lt;USERNAME&amp;gt;.github.io. Note that you likely will want to commit changes to your &amp;lt;YOUR-PROJECDT&amp;gt; repository as well. That’s it! Your personal page should be up and running at https://yourusername.github.io within a couple minutes. Utiliser un Domaine Personnalisé If you’d like to use a custom domain for your GitHub Pages site, create a file static/CNAME. Your custom domain name should be the only contents inside CNAME. Since it’s inside static, the published site will contain the CNAME file at the root of the published site, which is a requirements of GitHub Pages. Refer to the official documentation for custom domains for further information. "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/page-images/",
	"title": "À propos des images",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/",
	"title": "Accueil",
	"tags": [],
	"description": "",
	"content": "Modifiez cette page Documentation Thème Hugo docDock Hugo-theme-docdock est un thème pour Hugo, un moteur de site web rapide et moderne écrit en Go. Là où Hugo est souvent utilisé pour les blogs, ce thème est complètement conçu pour la documentation. Ce thème est une adaptation partielle du thème Learn de matcornic , un CMS moderne écrit en PHP. Cette démo actuelle a été générée statiquement avec Hugo en une simple commande : hugo -t docdock &amp;ndash; Le code source est disponible ici sur GitHub Déploiements automatiques La documentation actuelle est automatiquement publié grâce à Netlify. Pour en savoir plus, lisez Automated deployments with Wercker on gohugo.io Netlify construit, déploie et héberge les frontends. Le thème Dodock Ce thème supporte une structure d&amp;rsquo;arborescence de page pour afficher et organiser les pages. organisation du contenu : Tous les contenus sont des pages qui appartiennent à d&amp;rsquo;autres pages. Lire plus à ce sujet Fonctionnalités Voici les principales fonctionnalités : Chercher Gérer 5 niveaux de documentation Générer une présentation RevealJS à partir de markdown (embarquée ou page plein écran) Fichiers Attachés Lister les pages enfants Extraction ! Inclure un segment de contenu provenant d&amp;rsquo;une page dans une autre Boutons automatiques suivant/précédent pour naviguer dans les entrées de menu Icônes, Boutons, Alertes, Panels, Truc/Note/Info/Boîtes Alertes Retaillage d&amp;rsquo;Image, ombres&amp;hellip; Tags Contribuez à cette documentation Sentez-vous libre de mettre à jour ce contenu, envoyez simplement un &amp;ldquo;Modifier une page&amp;rdquo; et un pullrequest, votre modification sera déployée automatiquement une fois fusionnée. Utilisez le lien &amp;ldquo;Modifiez cette page&amp;rdquo; que vous trouverez en haut et à droite de chaque page. "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/logo/",
	"title": "Emplacement du Logo",
	"tags": [],
	"description": "",
	"content": "Créez une page _header.md dans le répertoire content. Son contenu est ce que vous obtiendrez à l&amp;rsquo;emplacement du logo (tout en haut à gauche de l&amp;rsquo;écrant). Considération pour l&amp;rsquo;emplacement du logo Ne réglez pas [menu.main] dans le frontmatter de votre fichier _header.md Truc : vous pouvez ajouter une image, une combobox avec des liens vers une autre documentation&amp;hellip; Truc 2 : regardez Entrées menu supplémentaires si vous voulez ajouter des liens vers un autre site web dans cette barre latérale "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcodes/",
	"title": "Raccourcis-code",
	"tags": [],
	"description": "",
	"content": "Quelques raccourcis de sont disponibles avec ce thème : revealjs alert attachments button children excerpt icon image mermaid notice panel "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/extramenu/",
	"title": "Entrée menu supplémentaires",
	"tags": [],
	"description": "",
	"content": "Vous pouvez définir des entrées de menu supplémentaires dans le menu de navigation sans quelque lien vers le contenu. Modifiez la configuration du site web config.toml et ajoutez une entrée [[menu.shortcuts]] pour chaque lien que vous voulez ajouter. Exemple pour le site web actuel, remarquez le param pre qui vous permet d&amp;rsquo;insérer du code HTML et utilisé ici pour séparer le contenu du menu de ce menu &amp;ldquo;statique&amp;rdquo; [[menu.shortcuts]] pre = &amp;quot;&amp;lt;h3&amp;gt;Plus&amp;lt;/h3&amp;gt;&amp;quot; name = &amp;quot;&amp;lt;i class=&#39;fa fa-github&#39;&amp;gt;&amp;lt;/i&amp;gt; Dépôt Github&amp;quot; identifier = &amp;quot;ds&amp;quot; url = &amp;quot;https://github.com/ChristopheDucamp/docdock&amp;quot; weight = 1 [[menu.shortcuts]] name = &amp;quot;&amp;lt;i class=&#39;fa fa-bookmark&#39;&amp;gt;&amp;lt;/i&amp;gt; Documentation Hugo&amp;quot; identifier = &amp;quot;hugodoc&amp;quot; url = &amp;quot;https://gohugo.io/&amp;quot; weight = 2 Lire ceci ici concernant Hugo et le menu "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/myslide/",
	"title": "Mes Slides ! en plein écran",
	"tags": [],
	"description": "",
	"content": "Le matin Se lever Éteindre le réveil Sortir du lit Petit déjeuner Manger des oeufs Boire du café Dans la soirée Dîner Manger des courgettes Boire du vin Aller dormir Aller au lit Compter les moutons "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": "Documentation de DocDock "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/homepage/",
	"title": "Page d&#39;Accueil",
	"tags": ["tag1", "tag2"],
	"description": "",
	"content": "Pour dire à Hugo-theme-docdock de considérer une page comme du contenu pour la page d&amp;rsquo;accueil, créez simplement un fichier appelé _index.md dans le répertoire du contenu. Considération pour la Page d&amp;rsquo;Accueil Ne pas régler [menu.main] dans le frontmatter de votre fichier _index.md "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/page-slide/",
	"title": "Présenter une Slide",
	"tags": [],
	"description": "",
	"content": "Une page basique de contenu md peut être restituée comme une présentation plein écran reveal.js. Vous pouvez aussi, embarquer une présentation dans une page sous forme de petite boîte, en utilisant le shortcode revealjs dans votre fichier md. Mise en Page Utilisez votre syntaxe commune Markdown que vous utilisez dans Hugo, n&amp;rsquo;oubliez pas que vous pouvez aussi placer des balises HTML. La syntaxe spéciale (en commentaire html) est disponible pour ajouter des attribut aux éléments Markdown. Ceci est utile entre autre pour les fragments. Lisez SVP la doc d&amp;rsquo;hakimel Options Dans le frontmatter de votre fichier page, réglez les paramètres type et revealOptions. Votre contenu sera servi sous forme de présentation plein écran et revealOptions sera utilisé pour ajuster son comportement. +++ title = &amp;quot;Dia Test&amp;quot; type=&amp;quot;slide&amp;quot; theme = &amp;quot;league&amp;quot; [revealOptions] transition= &#39;concave&#39; controls= true progress= true history= true center= true +++ Lisez plus ici sur les options reveal Délimiteurs de Slide Au moment de créer le contenu de votre diaporama pour votre présentation dans le fichier de contenu markdown, vous devez pouvoir distinguer entre une dia et la suivante. Ceci peut être réaliser simplement en utilisant une convention dans le Markdown qui indique le démarrage de chaque nouvelle slide. Le fait que les slides horizontales et verticales soient supportées par reveal.js, chacune d&amp;rsquo;entre elles a son propre et unique délimiteur. Pour indiquer le démarrage d&amp;rsquo;une slide horizontale, ajoutez simplement le délimiteur suivant dans votre Markdown : --- Pour indiquer le démarrage d&amp;rsquo;une slide verticale, ajoutez simplement le délimiteur suivant dans votre Markdown : ___ En utilisant une combinaison de slides horizontales et verticales, vous pouvez personnaliser la navigation dans votre présentation du diaporama. Généralement, les slides verticales sont utilisées pour présenter l&amp;rsquo;information sous une slide horizontale du niveau le plus haut. Par exemple, une présentation de diaporama simple peut être créée comme suit : +++ draft = false title = &amp;quot;test&amp;quot; date = &amp;quot;2017-04-24T18:36:24+02:00&amp;quot; type=&amp;quot;slide&amp;quot; theme = &amp;quot;league&amp;quot; [revealOptions] transition= &#39;concave&#39; controls= true progress= true history= true center= true +++ # Le matin ___ ## Se lever - Éteindre le réveil - Sortir du lit ___ ## Petit déjeuner - Manger des oeufs - Boire du café --- # Dans la soirée ___ ## Dîner - Manger des courgettes - Boire du vin ___ ## Aller dormir - Aller au lit - Compter les moutons Cliquez ici pour visualiser le rendu de cette page "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/page/",
	"title": "Créer une Page",
	"tags": ["tag1", "tag2"],
	"description": "",
	"content": "Hugo-theme-docdock définit deux types de pages. Default et Slide. Default est la page commune comme celle que vous êtes en train de lire. Slide est une page qui utilise le plein écran pour afficher son contenu en markdown comme une présentation reveals.js. HomePage est un contenu spécial qui s&amp;rsquo;affichera comme un contenu de page d&amp;rsquo;accueil. Pour dire à Hugo-theme-docdock de considérer une page comme un diapo, ajoutez simplement dedans un type=&amp;quot;slide&amp;quot; dans le frontmatter de votre fichier. lisez ceci pour en savoir plus sur la page comme slide Hugo-theme-docdock fournit des archétypes pour vous aider à créer ce type de page. Front Matter Chaque page Hugo doit définir un Front Matter en yaml, toml ou json. Hugo-theme-docdock utilise les paramètres suivants tout en haut de ceux existants : +++ # Nom Affiché de l&#39;Auteur creatordisplayname = &amp;quot;Christophe Ducamp&amp;quot; # Email de l&#39;Auteur creatoremail = &amp;quot;christophe@ducamp.me&amp;quot; # Nom Affiché du Dernier Correcteur lastmodifierdisplayname = &amp;quot;Christophe Ducamp&amp;quot; # Email du Dernier Correcteur lastmodifieremail = &amp;quot;christophe@ducamp.me&amp;quot; # Type de contenu, réglez sur &amp;quot;slide&amp;quot; pour l&#39;afficher en plein écran avec reveal.js type=&amp;quot;page&amp;quot; # Menu de configuration [menu.main] # identifiant de page (s&#39;il est vide l&#39;entrée du menu ne s&#39;affichera pas pour cette page) identifier=&amp;quot;page-id&amp;quot; # identifiiant de la page parent (si vide, la page sera rattachée à la page racine) parent=&amp;quot;parent-page-id&amp;quot; # Ordre d&#39;entrée de la page dans le menu weight = 1 +++ Ordonner les Pages Hugo fournit un moyen flexible pour gérer l&amp;rsquo;ordre de vos pages. Le moyen de plus simple est d&amp;rsquo;utiliser le paramètre weight dans le front matter de votre page. Soyez conscient.e que weight s&amp;rsquo;applique séparément pour chaque niveau de menu. En savoir plus sur l&amp;rsquo;organisation du contenu "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/parametrer-hugo/",
	"title": "Configuration Rapide Hugo",
	"tags": [],
	"description": "",
	"content": "Pré-requis Golang installé GOPATH configuré Installation go get -v github.com/spf13/hugo Une fois le get terminé, vous devriez trouver l&amp;rsquo;exécutable hugo à l&amp;rsquo;intérieur de $GOPATH/bin/. Pour mettre à jour les dépendances d&amp;rsquo;Hugo, utilisez go get avec l&amp;rsquo;option -u. go get -u -v github.com/spf13/hugo Créer votre Site Naviguez vers un endroit adéquat sur votre système de fichier et créez un nouveau site Hugo monsite en exécutant la commande suivante. hugo new site monsite Structure Créée archetypes : Vous pouvez créer de novueaux fichiers de contenus dans Hugo en utilisant la commande hugo new. Quand vous lancez cette commande, cela ajoute quelques propriétés de configuration au post comme la date et le title. Archetype vous permet de définir vos propres propriétés de configuration qui seront ajoutées au front matter du post à chaque fois qu&amp;rsquo;une commande hugo new est utilisée. config.toml : Chaque site web devrait avoir un fichier de configuration à la racine. Par défaut, le fichier de configuration utilise le format TOML mais vous pouvez aussi utiliser aussi bien les formats YAML ou JSON. TOML est le fichier minimal de configuration qui soit facile à lire du fait d&amp;rsquo;une sémantique évidente. Les réglages de configuration mentionnés dans le fichier config.toml sont appliqués sur l&amp;rsquo;ensemble du site. Ces réglages de configuration comprennent baseURL et title du site web. content : C&amp;rsquo;est là où vous stockerez le contenu du site web. Dans le contenu, vous créerez des sous-répertoires pour différentes sections. Supposons que votre site web ait trois sections – blog, article et tutorial alors vous aurez trois répertoires différents pour chacun d&amp;rsquo;eux à l&amp;rsquo;intérieur du répertoire content. Le nom de la section par ex. blog, article, ou tutorial sera utilisé par Hugo pour appliquer un layout spécifique applicable à cette section. data : Ce répertoire est utilisé pour stocker les fichiers de configuration qui peuvent être utilisés par Hugo au moment de générer votre site web. Vous pouvez écrire ces fichiers en format YAML, JSON, ou TOML. layouts : Le contenu à l&amp;rsquo;intérieur de ce répertoire est utilisé pour spécifier comment votre contenu sera converti à l&amp;rsquo;intérieur du site web statique. static : Ce répertoire est utilisé pour stocker tout le contenu statique dont aura besoin votre site web comme images, CSS, JavaScript ou tout autre contenu statique. themes : C&amp;rsquo;est là où vous créerez un thème pour votre site à utiliser. Les thèmes fournissent le layout et les templates qui restituent le contenu. Il existe une large varité de thèmes open source à télécharger et utiliser mais vous pouvez aussi créer le vôtre si vous préférez. Installer un Thème cd themes git clone https://github.com/yoshiharuyamashita/blackburn.git Configurer le Site Copiez le fichier config.toml à partir du template exampleSite Blackburn vers la racine du site Hugo. baseurl = &amp;quot;http://www.willowbot.com/&amp;quot; languageCode = &amp;quot;en-us&amp;quot; title = &amp;quot;WillowBot Sandbox&amp;quot; theme = &amp;quot;blackburn&amp;quot; author = &amp;quot;WillowBot Team&amp;quot; copyright = &amp;quot;&amp;amp;copy; 2017. All rights reserved.&amp;quot; canonifyurls = false paginate = 10 [indexes] tag = &amp;quot;tags&amp;quot; topic = &amp;quot;topics&amp;quot; [params] # Shown in the home page subtitle = &amp;quot;a more formal napkin&amp;quot; brand = &amp;quot;WillowBot&amp;quot; googleAnalytics = &amp;quot;UA-11111111-1&amp;quot; disqus = &amp;quot;&amp;quot; # CSS name for highlight.js highlightjs = &amp;quot;androidstudio&amp;quot; dateFormat = &amp;quot;Jan 02, 2006, 15:04&amp;quot; [permalinks] post = &amp;quot;/:slug/&amp;quot; [menu] # Shown in the side menu. [[menu.main]] name = &amp;quot;Home&amp;quot; pre = &amp;quot;&amp;lt;i class=&#39;fa fa-home fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot; weight = 0 identifier = &amp;quot;home&amp;quot; url = &amp;quot;/&amp;quot; [[menu.main]] name = &amp;quot;Projects&amp;quot; pre = &amp;quot;&amp;lt;i class=&#39;fa fa-rocket fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot; weight = 1 identifier = &amp;quot;projects&amp;quot; url = &amp;quot;/projects/&amp;quot; [[menu.main]] name = &amp;quot;Posts&amp;quot; pre = &amp;quot;&amp;lt;i class=&#39;fa fa-database fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot; weight = 1 identifier = &amp;quot;post&amp;quot; url = &amp;quot;/post/&amp;quot; [[menu.main]] name = &amp;quot;Quotes&amp;quot; pre = &amp;quot;&amp;lt;i class=&#39;fa fa-quote-left fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot; weight = 1 identifier = &amp;quot;quotes&amp;quot; url = &amp;quot;/quotes/&amp;quot; [[menu.main]] name = &amp;quot;About&amp;quot; pre = &amp;quot;&amp;lt;i class=&#39;fa fa-user fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot; weight = 2 identifier = &amp;quot;about&amp;quot; url = &amp;quot;/about/&amp;quot; Copiez le fichier default.md à partir de blackburn/archetypes vers le répertoire archetypes à la racine d&amp;rsquo;hugo. +++ title = &amp;quot;&amp;quot; slug = &amp;quot;&amp;quot; draft = true tags = [] topics = [] description = &amp;quot;&amp;quot; +++ Créer le Contenu À partir du répertoire racine du site, exécutez hugo new post/2017/0412-hello-world.md Ceci créera un nouveau fichier prêt pour le contenu. Réglez les détails du frontmatter comme convenu. +++ date = &amp;quot;2017-04-12T14:03:36-04:00&amp;quot; description = &amp;quot;&amp;quot; draft = true slug = &amp;quot;hello-world&amp;quot; tags = [] title = &amp;quot;Hello World&amp;quot; topics = [] +++ Les nouveaux posts par défaut sont réglés sur des brouillons (draft). Pour faire que votre ébauche soit publique, soit vous lancez la commande ci-dessous ou vous modifiez manuellement le statut draft dans le post en false. hugo undraft content/post/2017/0412-hello-world.md Écrivez l&amp;rsquo;article en utilisant markdown… Vérifier le Contenu Exécutez la ligne du dessous pour démarrer le serveur local qui sert le site. Remarquez que la commande doit être exécutée à partir du répertoire où existe la racine du site. hugo server --theme=blackburn --buildDrafts Pour visualiser le site, naviguez sur http://localhost:1313/. Le serveur hugo supporte le rafraîchissement live, par conséquent les modifications faites sur les posts, le fichier config, etc. sont automatiquement renvoyées sur les pages web servies. Genérer le Site Web Pour finir et générer les pages web statiques, lancez la commande ci-dessous. hugo --theme=blackburn Après avoir lancé la commande hugo, un répertoire /public est créé contenant tous les fichiers sources du site web généré all prêts à être téléversés “online”. Le site est hébergé sur Google Cloud Storage. Les détails sur la façon de faire suivront. __ "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/configuration/",
	"title": "Configuration du Thème",
	"tags": [],
	"description": "",
	"content": "Au moment de créer le site web, vous pouvez paramétrer un thème en utilisant l&amp;rsquo;option --theme. Nous vous suggérons de modifier votre fichier de configuration et de paramétrer le thème par défaut. Exemple avec le format config.toml. theme = &amp;quot;docdock&amp;quot; Génération d&amp;rsquo;un Index de Recherche Ajoutez la ligne suivante dans le même fichier de configuration. [outputs] home = [ &amp;quot;HTML&amp;quot;, &amp;quot;RSS&amp;quot;, &amp;quot;JSON&amp;quot;] Le fichier d&amp;rsquo;index de recherche LUNRJS sera généré sur les modifications de contenus. Votre contenu de site web Regardez comment créer et organiser votre contenu rapidement et intuitivement. "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/gettingstart/",
	"title": "Démarrage",
	"tags": [],
	"description": "",
	"content": "Pré-requis Téléchargez Hugo pour votre OS (Windows, Linux, Mac) : ça c&amp;rsquo;est vraiment simple Installation Configuration Rapide Hugo Configuration du Thème "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/d%C3%A9ploiement/",
	"title": "Déploiement",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/deploiement-wercker/",
	"title": "Déploiements Automatisés avec Wercker",
	"tags": [],
	"description": "",
	"content": "Attention Rédaction et traduction en cours et images manquantes. Dans ce tutoriel nous réglerons un projet basique Hugo, et nous le configurerons ensuite avec un outil gratuit appelé Wercker pour déployer automatiquement le site généré à chaque fois que nous y ajoutons un article. Nous le déploierons sur GitHub pages car c&amp;rsquo;est le moyen le plus facile pour paramétrer, mais vous verrez que vous pouvez utiliser tout ce que vous voudrez. Ce tutoriel vous emmène sur chaque étape du processus, complété d&amp;rsquo;impressions écrans et il est plutôt long. Les hypothèses pour ce tutoriel sont que vous savez utiliser git pour le contrôle de version et que vous disposez d&amp;rsquo;un compte chez GitHub. Si vous n&amp;rsquo;êtes pas à l&amp;rsquo;aise avec ça, regardez la section help GitHub qui a une explication sur la façon d&amp;rsquo;installer et utiliser git. Et vous pouvez aussi facilement vous créer un compte chez GitHub. Créer un site basique Hugo Il existe déjà des pages dédiées pour décrire comment installer un site Hugo, par conséquent nous étudierons les étapes les plus basiques requises pour faire tourner un site et le lancer avant de plonger dans la configuration de Wercker. Tout le travail pour installer le projet est fait en utilisant la ligne de commande, et maintenu aussi simple que possible. Créez le nouveau site en utilisant la commande hugo new site et nous nous déplacerons à l&amp;rsquo;intérieur. hugo new site exemple-hugo-wercker cd exemple-hugo-wercker Ajoutez le thème herring-cove en le clonant à l&amp;rsquo;intérieur du répertoire themes en utilisant les commandes suivantes. cd themes git clone https://github.com/spf13/herring-cove.git Cloner ainsi le projet provoquera un conflit avec notre propre contrôle de version, par conséquent nous retirerons la configuration externe git. rm -rf herring-cove/.git Ajoutons une page rapide about. hugo new about.md Maintenant, nous modifierons contents/about.md pour nous assurer que ce n&amp;rsquo;est plus un draft (ébauche) et y ajouterons un peu de texte. hugo undraft content/about.md Une fois terminé, c&amp;rsquo;est toujours une bonne idée de faire une vérification rapide pour voir si tout fonctionne en le lançant hugo server --theme=herring-cove Si tout fonctionne, vous devriez pouvoir voir quelque chose d&amp;rsquo;équivalent à l&amp;rsquo;image en-dessous si vous tapez localhost:1313 dans la barre d&amp;rsquo;URL de votre navigateur. Attention Ajouter image site. Paramétrer le contrôle de version Ajouter git à notre projet se fait en lançant la commande git init à partir du répertoire racine du projet. git init Lancer git status à ce stade vous présentera vos entrées : le fichier config.toml, le répertoire themes, le répertoire contents, et le répertoire public. Nous ne voulons pas que le répertoire public soit sous contrôle de version, car nous utiliserons wercker pour générer cela plus tard. Par conséquent, nous ajoutons un fichier gitignore qui exclura ça en utilisant la commande qui suit echo &amp;quot;/public&amp;quot; &amp;gt;&amp;gt; .gitignore Comme nous n&amp;rsquo;avons pas encore de fichiers statiques en dehors du répertoire themes, , Wercker pourrait se plaindre quand nous essaierons de construire le site plus tard. Pour éviter cela, nous devons simplement ajouter n&amp;rsquo;importe quel fichier au répertoire statique. Pour rester simple à ce stade, nous ajouterons un fichier robots.txt qui donnera un plein accès au site à tous les moteurs de recherche quand il sera construit. echo &amp;quot;User-agent: *\nDisallow:&amp;quot; &amp;gt; static/robots.txt Après ça, nous pouvons ajouter tout au repo. git commit -a -m &amp;quot;Initial commit&amp;quot; Ajouter le projet à GitHub Premièrement, nous créerons un nouveau dépôt. Vous pouvez faire ça en cliquant sur le signe + tout en haut et à droite, ou en allant sur https://github.com/new Nous choisissons ensuite un nom pour le projet (exemple-hugo-wercker). Au moment de cliquer sur &amp;ldquo;create repository&amp;rdquo;, GitHub affiche les commandes pour ajouter un projet existant au site. Les commandes sont celles utilisées pour ce site, si vous suivez vous devrez utiliser celles indiquées par GitHub. Une fois que nous aurons exécuté ces commandes, le projet se trouve dans GitHub et nous pouvons passer à la configuration de Wercker. git remote add origin git@github.com:VotreNomUtilisateurGitHub/exemple-hugo-wercker.git git push -u origin master Bienvenue sur wercker Commençons par créer un compte sur Wercker. Pour faire ceci, nous allons sur http://wercker.com et cliquons sur le bouton Sign up. Enregistrement Pour nous simplifier la vie, nous nous enregistrons en utilisant GitHub. Si vous n&amp;rsquo;avez pas de compte GitHub, ou si vous ne voulez pas l&amp;rsquo;utiliser pour votre compte, vous pouvez bien sûr vous enregistrer tout aussi bien avec un nom d&amp;rsquo;utilisateur et un mot de passe. Connexion GitHub/Bitbucket Après vous être enregistré.e, vous devrez lier votre compte GitHub et/ou Bitbucket à Wercker. Vous faites ça en allant sur vos réglages de profil, et ensuite &amp;ldquo;Git connections&amp;rdquo;. Si vous vous êtes enregistré.e en utilisant GitHub, cela ressemblera à l&amp;rsquo;image du dessous. Pour connecter un service manquant, cliquez simplement sur le bouton connect qui vous enverra ensuite soit sur GitHub ou Bitbucket où vous pourriez avoir besoin de vous connecter et d&amp;rsquo;approuver l&amp;rsquo;accès vers votre compte. Ajouter votre projet Now that we&amp;rsquo;ve got all the preliminaries out of the way, it&amp;rsquo;s time to set up our application. For this we click on the + Create button next to Applications. Create a new application, and choose to use GitHub. Select a repository Clicking this will make Wercker show you all the repositories you have on GitHub, but you can easily filter them as well. So we search for our repository, select it, and then click on &amp;ldquo;Use selected repo&amp;rdquo;. Configurer l&amp;rsquo;accès As Wercker doesn&amp;rsquo;t access to check out your private projects by default, it will ask you what you want to do. When your project is public, as needs to be the case if you wish to use GitHub Pages, the top choice is recommended. When you use this it will simply check out the code in the same way anybody visiting the project on GitHub can do. Public or not This is a personal choice; you can make an app public so that everyone can see more details about it. This doesn&amp;rsquo;t give you any real benefits either way in general, although as part of the tutorial I have of course made this app public so you can see it in action yourself. Wercker.yml Choose Default for your programming language. Wercker will now attempt to create an initial wercker.yml file for you. Or rather, it will create the code you can copy into it yourself. Because there is nothing special about our project according to Wercker, we will simply get the debian box. So what we do now is create a wercker.yml file in the local root of our project that contains the provided configuration, and after we finish setting up the app we will expand this file to make it actually do something. And we&amp;rsquo;ve got an app The application is added now, and Wercker will be offering you the chance to trigger a build. As we haven&amp;rsquo;t pushed up the wercker.yml file however, we will politely decline this option. Wercker has automatically added a build pipeline to your application. Adding build step And now we&amp;rsquo;re going to add the build step to the build pipeline. First, we go to the &amp;ldquo;Registry&amp;rdquo; action in the top menu and then search for &amp;ldquo;hugo build&amp;rdquo;. Find the Hugo-Build task by Arjen and select it. Using Hugo-Build Inside the details of this step you will see how to use it. At the top is a summary for very basic usage, but when scrolling down you go through the README of the step which will usually contain more details about the advanced options available and a full example of using the step. We&amp;rsquo;re not going to use any of the advanced features in this tutorial, so we&amp;rsquo;ll return to our project and add the details we need to our wercker.yml file so that it looks like below: box: debian build: steps: - install-packages: packages: git - script: name: download theme code: | $(git clone https://github.com/spf13/herring-cove ./themes/herring-cove) - arjen/hugo-build: version: &amp;quot;0.14&amp;quot; theme: herring-cove flags: --buildDrafts=true As you can see, we have two steps in the build pipeline. The first step downloads the theme, and the second step runs arjen&amp;rsquo;s hugo-build step. To use a different theme, you can replace the link to the herring-cove source with another theme&amp;rsquo;s repository - just make sure the name of the folder you download the theme to (./themes/your-theme-name) matches the theme name you tell arjen/hugo-build to use (theme: your-theme-name). Now we&amp;rsquo;ll test that it all works as it should by pushing up our wercker.yml file to GitHub and seeing the magic at work. git commit -a -m &amp;quot;Add wercker.yml&amp;quot; git push origin master Once completed a nice tick should have appeared in front of your first build, and if you want you can look at the details by clicking on it. However, we&amp;rsquo;re not done yet as we still need to deploy it to GitHub Pages. Adding a deploy pipeline In order to deploy to GitHub Pages we need to add a deploy pipeline. First, go to your Wercker application&amp;rsquo;s page. Go to the &amp;ldquo;Workflows&amp;rdquo; tab and click on &amp;ldquo;Add new pipeline.&amp;rdquo; Name it whatever you want; &amp;ldquo;deploy-production&amp;rdquo; or &amp;ldquo;deploy&amp;rdquo; works fine. For your YML Pipeline name, type in &amp;ldquo;deploy&amp;rdquo; without quotes. Leave the hook type as &amp;ldquo;Default&amp;rdquo; and hit the Create button. Now you need to link the deploy pipeline to your build pipeline. In the workflow editor, click on the + next to your build pipeline and add the deploy pipeline you&amp;rsquo;ve just made. Now the deploy pipeline will be run automatically whenever the build pipeline is completed successfully. Adding a deploy step Next, we need to add a step to our deploy pipeline that will deploy the Hugo-built website to your GitHub pages repository. Once again searching through the Steps registry, we find that the most popular step is the lukevevier/gh-pages step so we add the configuration for that to our wercker.yml file. Additionally, we need to ensure that the box we run on has git and ssh installed. We can do this using the install-packages command, which then turns the wercker.yml file into this: box: debian build: steps: - arjen/hugo-build: version: &amp;quot;0.14&amp;quot; theme: herring-cove flags: --buildDrafts=true deploy: steps: - install-packages: packages: git ssh-client - lukevivier/gh-pages@0.2.1: token: $GIT_TOKEN domain: hugo-wercker.ig.nore.me basedir: public How does the GitHub Pages configuration work? We&amp;rsquo;ve selected a couple of things, first the domain we want to use for the site. Configuring this here will ensure that GitHub Pages is aware of the domain you want to use. Secondly we&amp;rsquo;ve configured the basedir to public, this is the directory that will be used as the website on GitHub Pages. And lastly, you can see here that this has a $GIT_TOKEN variable. This is used for pushing our changes up to GitHub and we will need to configure this before we can do that. To do this, go to your application page and click on the &amp;ldquo;Environment&amp;rdquo; tab. Under Application Environment Variables, put $GIT_TOKEN for the Key. Now you&amp;rsquo;ll need to create an access token in GitHub. How to do that is described on a GitHub help page. Copy and paste the access token you generated from GitHub into the Value box. Make sure you check Protected and then hit Add. With the deploy step configured in Wercker, we can push the updated wercker.yml file to GitHub and it will create the GitHub pages site for us. The example site we used here is accessible under hugo-wercker.ig.nore.me Conclusion From now on, any time you want to put a new post on your blog all you need to do is push your new page to GitHub and the rest will happen automatically. The source code for the example site used here is available on GitHub, as is the Hugo Build step itself. If you want to see an example of how you can deploy to S3 instead of GitHub pages, take a look at Wercker&amp;rsquo;s documentation about how to set that up. "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/github/",
	"title": "Github",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/h%C3%A9bergement/",
	"title": "Hébergement",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "Les étapes qui suivent sont là pour vous aider à initialiser votre nouveau site web. Si vous ne connaissez pas du tout Hugo, nous vous suggérons de vous entraîner en suivant ici les instructions de paramétrage ou cette documentation rapide pour débutants. Créer votre Documentation Hugo fournit une commande new pour créer un nouveau site web. $ hugo new site &amp;lt;nouveau_site_web&amp;gt; Installer le Thème Installez le thème Hugo-theme-docdock en suivant ceci Déplacez-vous dans le répertoire thème et téléchargez le thème $ cd themes $ git clone https://github.com/vjeantet/hugo-theme-docdock.git docdock Alternativement, vous pouvez télécharger le thème sous fichier .zip et l&amp;rsquo;extraire dans le répertoire themes. Configuration Basique Suivez ici les instructions "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/organisation/",
	"title": "Organisation du Contenu",
	"tags": [],
	"description": "",
	"content": "Avec Hugo, les pages sont le coeur de votre site. Organisez votre site comme tout autre projet Hugo. La magie se passe dans le frontmatter de chaque contenu. Menu Hugo dispose d&amp;rsquo;un système de menu simple et puissant qui permet au contenu d&amp;rsquo;être placé dans les menus avec un bon niveau de contrôle sans trop de travail, dans les pages de contenus. Chaque page de contenu compose le menu, elles façonnent la structure de votre site web. Pour lier les pages entre elles : Dans le frontmatter de chaque page de contenu ; Réglez l&amp;rsquo;identifiant parent. Réglez l&amp;rsquo;identifiant identifier de votre contenu. identifier doit être une étiquette unique dans tout votre contenu si parent est vide, le contenu sera placé au niveau racine (enfant de la page d&amp;rsquo;accueil) Dans cet exemple, &amp;ldquo;Ma page Papa&amp;rdquo; sera rattachée à la racine, menu de niveau 1. +++ title = &amp;quot;Ma page Papa&amp;quot; [menu.main] identifier = &amp;quot;daddy&amp;quot; +++ Dans cet exemple &amp;ldquo;Ma page Enfant&amp;rdquo; sera rattachée à la page &amp;ldquo;daddy&amp;rdquo;, et affichée sous un menu de niveau 2. +++ title = &amp;quot;Ma page Enfant&amp;quot; [menu.main] identifier = &amp;quot;child&amp;quot; parent=&amp;quot;daddy&amp;quot; +++ Ajouter une icône à l&amp;rsquo;entrée de menu dans le frontmatter de la page, ajoutez un param pre pour insérer tout code HTML avant l&amp;rsquo;étiquette de menu : exemple pour afficher une icône github +++ [menu.main] parent = &amp;quot;&amp;quot; identifier = &amp;quot;repo&amp;quot; pre =&amp;quot;&amp;lt;i class=&#39;fa fa-github&#39;&amp;gt;&amp;lt;/i&amp;gt; &amp;quot; +++ Personnaliser une étiquette d&amp;rsquo;entrée de menu Ajoutez un param name à côté de [menu.main] +++ [menu.main] parent = &amp;quot;&amp;quot; identifier = &amp;quot;repo&amp;quot; pre =&amp;quot;&amp;lt;i class=&#39;fa fa-github&#39;&amp;gt;&amp;lt;/i&amp;gt; &amp;quot; name = &amp;quot;Github repo&amp;quot; +++ Créer une redirection de page Ajoutez un param url à côté de [menu.main] +++ [menu.main] parent = &amp;quot;page&amp;quot; identifier = &amp;quot;page-images&amp;quot; weight = 23 url = &amp;quot;/shortcode/image/&amp;quot; +++ Regardez le menu &amp;ldquo;Créer une Page/À Propos des images&amp;rdquo; qui redirige vers &amp;ldquo;Shortcodes/image&amp;rdquo; Ordre des entrée menu/page frères et soeurs dans le [menu.main] ajoutez le param weight avec un numéro pour trier. +++ [menu.main] identifier = &amp;quot;child&amp;quot; parent=&amp;quot;dady&amp;quot; weight = 4 +++ Cacher une entrée de menu Ne configurez pas l&amp;rsquo;identifier pour masquer une entrée provenant du &amp;hellip; menu. Votre contenu reste joint à sa page parent. Structure de répertoire et nom de fichier L&amp;rsquo;organisation du contenu n&amp;rsquo;est pas votre structure de répertoire. Sentez-vous libre de sauvegarder votre fichier .md comme vous voulez, il peut ne pas refléter forcément votre organisation de menu. Page d&amp;rsquo;Accueil Découvrez comment personnaliser votre page d&amp;rsquo;accueil "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/",
	"title": "Shortcodes",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/tag1/",
	"title": "Tag1",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/tag2/",
	"title": "Tag2",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/alert/",
	"title": "alert",
	"tags": [],
	"description": "",
	"content": "Le shortcode alert vous permet de mettre en valeur l&amp;rsquo;information dans votre page. Il crée une boîte colorée entourant votre texte, comme ceci : Ceci est une alerte ! Usage Paramètre Par défaut Description theme info success, info,warning,danger Trucs : régler seulement le thème comme argument fonctionne aussi : {{%alert warning%}} au lieu de {{%alert theme=&amp;quot;warning&amp;quot;%}} Exemples basiques {{% alert theme=&amp;quot;info&amp;quot; %}}**ceci** est un texte {{% /alert %}} {{% alert theme=&amp;quot;success&amp;quot; %}}**Yeahhh !** est un texte{{% /alert %}} {{% alert theme=&amp;quot;warning&amp;quot; %}}**Soyez prudent** est un texte{{% /alert %}} {{% alert theme=&amp;quot;danger&amp;quot; %}}**Attention !** est un texte{{% /alert %}} ceci est une info Yeahhh ! est un success Be carefull est un warning Attention ! est un danger "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/attachments/",
	"title": "attachments",
	"tags": [],
	"description": "Le shortcode Attachments affiche une liste de fichiers attachés à une page.",
	"content": "Le shortcode Attachments affiche une liste de fichiers attachés à une page. Exemple : Attachments BachGavotteShort.mp3 (357 ko) Carroll_AliceAuPaysDesMerveilles.pdf (1696 ko) adivorciarsetoca00cape.pdf (2942 ko) hugo.png (17 ko) movieselectricsheep-flock-244-32500-2.mp4 (340 ko) newsendbook.php?id=2858 (0 ko) Usage Le raccourci liste les fichiers trouvés dans un répertoire appelé comme votre page et finissant par .files. Quand votre page est nommée &amp;ldquo;mypage.md&amp;rdquo;, créez un répertoire nommé mypage.files et placez vos fichiers à l&amp;rsquo;intérieur. c&amp;rsquo;est tout ! Truc : Regardez ce codes source de documentation sur github paramètres Paramètre Par défaut Description titre &amp;ldquo;Attachments&amp;rdquo; titre de liste pattern &amp;rdquo;.*&amp;rdquo; Une expression regulière, utilisée pour filtrer les pièces jointes par nom de fichier. La valeur du paramètre pattern doit être une expression rationnelle. Par exemple : Pour correspondre à un suffixe de fichier de &amp;lsquo;jpg&amp;rsquo;, utilisez .*jpg (pas *.jpg). Pour correspondre à des noms de fichiers finissant par &amp;lsquo;jpg&amp;rsquo; ou &amp;lsquo;png&amp;rsquo;, utilisez .*(jpg|png) Démo Liste de pièces jointes finissant par pdf ou mp4 {{%attachments title=&amp;quot;Fichiers en rapport&amp;quot; pattern=&amp;quot;.*(pdf|mp4)&amp;quot;/%}} donne ceci Fichiers en rapport Carroll_AliceAuPaysDesMerveilles.pdf (1696 ko) adivorciarsetoca00cape.pdf (2942 ko) movieselectricsheep-flock-244-32500-2.mp4 (340 ko) "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/button/",
	"title": "button",
	"tags": [],
	"description": "s",
	"content": "Affiche un bouton actionnable dans votre page. Ceci est un bouton d&#39;avertissement Usage Paramètre Par défaut Description href &amp;rdquo;&amp;rdquo; l&amp;rsquo;endroit à lier pour le href align &amp;ldquo;center&amp;rdquo; alignement horizontal du bouton sur la page theme primary default, primary , success,info,warning,danger Le texte que vous placez à l&amp;rsquo;intérieur en shortcode sera affiché comme le texte du bouton Démo {{&amp;lt; button href=&amp;quot;https://google.com&amp;quot; &amp;gt;}} aller sur google {{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;quot;https://google.com&amp;quot; theme=&amp;quot;success&amp;quot; &amp;gt;}} Succès {{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;quot;https://google.com&amp;quot; theme=&amp;quot;info&amp;quot; &amp;gt;}} Info {{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;quot;https://google.com&amp;quot; theme=&amp;quot;warning&amp;quot; &amp;gt;}} Attention {{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;quot;https://google.com&amp;quot; theme=&amp;quot;danger&amp;quot; &amp;gt;}} Danger ! {{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;quot;https://google.com&amp;quot; theme=&amp;quot;default&amp;quot; &amp;gt;}} Danger ! {{&amp;lt; /button &amp;gt;}} aller sur google Succès Info Attention Danger ! Danger ! "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/children/",
	"title": "children",
	"tags": [],
	"description": "",
	"content": "This shortcode will list the child pages of a page. Usage Parameter Default Description style &amp;ldquo;li&amp;rdquo; Choose the style used to display descendants. It could be any HTML tag name nohidden &amp;ldquo;false&amp;rdquo; When true, child pages hidden from the menu will not display Demo {{}} {{}} {{}} page 1 page 2 page 3 page 4 page 1 page 2 page 3 page 4 page 1 page 2 page 3 "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/excerpt/",
	"title": "excerpt",
	"tags": [],
	"description": "",
	"content": "Le code raccourci Excerpt est utilisé pour marquer une page de contenu d&amp;rsquo;une page pour ré-utilisation. Définir un excerpt permet d&amp;rsquo;autres shortcodes, comme le shortcode excerpt-include shortcode, pour affichier le contenu marqué ailleurs. Vous ne pouvez définir seulement qu&amp;rsquo;un excerpt par page. En d&amp;rsquo;autres mots, vous ne pouvez seulement ajouter le shortcode Excerpt qu&amp;rsquo;une fois par page. Usage Paramètre Par défaut Description hidden &amp;ldquo;false&amp;rdquo; Contrôle si le contenu de la page contenu dans l&amp;rsquo;emplacement du shortcode Excerpt est affiché sur la page.Notez que cette option n&amp;rsquo;affecte que la page qui contient le shortcode Excerpt. Cela n&amp;rsquo;affecte pas les pages où le contenu est réutilisé. Démo {{%excerpt%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation **ullamco** laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in _reprehenderit in voluptate_ cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /excerpt%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Voir l&amp;rsquo;exemple de ré-utilisation avec excerpt-include shortcode "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/excerpt-include/",
	"title": "excerpt-include",
	"tags": [],
	"description": "",
	"content": "The Excerpt Include shortcode is used to display &amp;lsquo;excerpted&amp;rsquo; (that is, a segment of) content from one page in another. Before you can use this shortcode, the excerpt must have been defined using the Excerpt shortcode. Note that you can have more than one Excerpt Include shortcode on a page (although you can have only one Excerpt shortcode on a page). Usage Parameter Default Description filename required Type the filename of the page that contains the excerpt to be displayed.Path is relative to the content folder panel none Determines whether docDock will display a panel around the excerpted content. The panel includes the given panel&amp;rsquo;s value and the border of the panel. By default, the panel and title are not shown. Demo The paragraph below shows an example of an Excerpt Include shortcode, containing content from an excerpt which we have defined on the Excerpt shortcode page. On the Excerpt Include shortcode below, we have set the options to show both the title of the page and the panel surrounding the content. {{%excerpt-include filename=&amp;quot;shortcode/excerpt.md&amp;quot; panel=&amp;quot;From excerpt page&amp;quot; /%}} From excerpt page Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/icon/",
	"title": "icon",
	"tags": [],
	"description": "",
	"content": "Affiche une icône comme Cela utilise : la bibiothèque glyphicons (bootstrap).plus d&amp;rsquo;infos ici la bibliothèque fontawesome plus d&amp;rsquo;infos ici Ce shortcode icon affichera une icône dans votre page. Usage Paramètre Par défaut Description nom requis nom de l&amp;rsquo;icône (voir en-dessous) size none size of icon, medium, xx-small, x-small, small, large, x-large, xx-large, 11px, 2em, 20%&amp;hellip;. Trucs : Ne réglera que le nom comme argument fonctionne aussi : {{&amp;lt;icon film&amp;gt;}} au lieu de {{&amp;lt;icon name=&amp;quot;film&amp;quot;&amp;gt;}} Démo {{&amp;lt; icon name=&amp;quot;film&amp;quot; size=&amp;quot;large&amp;quot; &amp;gt;}} . icônes disponibles asterisk plus euro eur minus cloud envelope pencil glass music search heart star star-empty user film th-large th th-list ok remove zoom-in zoom-out off signal cog trash home file time road download-alt download upload inbox play-circle repeat refresh list-alt lock flag headphones volume-off volume-down volume-up qrcode barcode tag tags book bookmark print camera font bold italic text-height text-width align-left align-center align-right align-justify list indent-left indent-right facetime-video picture map-marker adjust tint edit share check move step-backward fast-backward backward play pause stop forward fast-forward step-forward eject chevron-left chevron-right plus-sign minus-sign remove-sign ok-sign question-sign info-sign screenshot remove-circle ok-circle ban-circle arrow-left arrow-right arrow-up arrow-down share-alt resize-full resize-small exclamation-sign gift leaf fire eye-open eye-close warning-sign plane calendar random comment magnet chevron-up chevron-down retweet shopping-cart folder-close folder-open resize-vertical resize-horizontal hdd bullhorn bell certificate thumbs-up thumbs-down hand-right hand-left hand-up hand-down circle-arrow-right circle-arrow-left circle-arrow-up circle-arrow-down globe wrench tasks filter briefcase fullscreen dashboard paperclip heart-empty link phone pushpin usd gbp sort sort-by-alphabet sort-by-alphabet-alt sort-by-order sort-by-order-alt sort-by-attributes sort-by-attributes-alt unchecked expand collapse-down collapse-up log-in flash log-out new-window record save open saved import export send floppy-disk floppy-saved floppy-remove floppy-save floppy-open credit-card transfer cutlery header compressed earphone phone-alt tower stats sd-video hd-video subtitles sound-stereo sound-dolby sound-5-1 sound-6-1 sound-7-1 copyright-mark registration-mark cloud-download cloud-upload tree-conifer tree-deciduous cd save-file open-file level-up copy paste alert equalizer king queen pawn bishop knight baby-formula tent blackboard bed apple erase hourglass lamp duplicate piggy-bank scissors bitcoin btc xbt yen jpy ruble rub scale ice-lolly ice-lolly-tasted education option-horizontal option-vertical menu-hamburger modal-window oil grain sunglasses text-size text-color text-background object-align-top object-align-bottom object-align-horizontal object-align-left object-align-vertical object-align-right triangle-right triangle-left triangle-bottom triangle-top console superscript subscript menu-left menu-right menu-down menu-up Web Application Icons fa-address-book fa-address-book-o fa-address-card fa-address-card-o fa-adjust fa-american-sign-language-interpreting fa-anchor fa-archive fa-area-chart fa-arrows fa-arrows-h fa-arrows-v fa-asl-interpreting (alias) fa-assistive-listening-systems fa-asterisk fa-at fa-audio-description fa-automobile (alias) fa-balance-scale fa-ban fa-bank (alias) fa-bar-chart fa-bar-chart-o (alias) fa-barcode fa-bars fa-bath fa-bathtub (alias) fa-battery (alias) fa-battery-0 (alias) fa-battery-1 (alias) fa-battery-2 (alias) fa-battery-3 (alias) fa-battery-4 (alias) fa-battery-empty fa-battery-full fa-battery-half fa-battery-quarter fa-battery-three-quarters fa-bed fa-beer fa-bell fa-bell-o fa-bell-slash fa-bell-slash-o fa-bicycle fa-binoculars fa-birthday-cake fa-blind fa-bluetooth fa-bluetooth-b fa-bolt fa-bomb fa-book fa-bookmark fa-bookmark-o fa-braille fa-briefcase fa-bug fa-building fa-building-o fa-bullhorn fa-bullseye fa-bus fa-cab (alias) fa-calculator fa-calendar fa-calendar-check-o fa-calendar-minus-o fa-calendar-o fa-calendar-plus-o fa-calendar-times-o fa-camera fa-camera-retro fa-car fa-caret-square-o-down fa-caret-square-o-left fa-caret-square-o-right fa-caret-square-o-up fa-cart-arrow-down fa-cart-plus fa-cc fa-certificate fa-check fa-check-circle fa-check-circle-o fa-check-square fa-check-square-o fa-child fa-circle fa-circle-o fa-circle-o-notch fa-circle-thin fa-clock-o fa-clone fa-close (alias) fa-cloud fa-cloud-download fa-cloud-upload fa-code fa-code-fork fa-coffee fa-cog fa-cogs fa-comment fa-comment-o fa-commenting fa-commenting-o fa-comments fa-comments-o fa-compass fa-copyright fa-creative-commons fa-credit-card fa-credit-card-alt fa-crop fa-crosshairs fa-cube fa-cubes fa-cutlery fa-dashboard (alias) fa-database fa-deaf fa-deafness (alias) fa-desktop fa-diamond fa-dot-circle-o fa-download fa-drivers-license (alias) fa-drivers-license-o (alias) fa-edit (alias) fa-ellipsis-h fa-ellipsis-v fa-envelope fa-envelope-o fa-envelope-open fa-envelope-open-o fa-envelope-square fa-eraser fa-exchange fa-exclamation fa-exclamation-circle fa-exclamation-triangle fa-external-link fa-external-link-square fa-eye fa-eye-slash fa-eyedropper fa-fax fa-feed (alias) fa-female fa-fighter-jet fa-file-archive-o fa-file-audio-o fa-file-code-o fa-file-excel-o fa-file-image-o fa-file-movie-o (alias) fa-file-pdf-o fa-file-photo-o (alias) fa-file-picture-o (alias) fa-file-powerpoint-o fa-file-sound-o (alias) fa-file-video-o fa-file-word-o fa-file-zip-o (alias) fa-film fa-filter fa-fire fa-fire-extinguisher fa-flag fa-flag-checkered fa-flag-o fa-flash (alias) fa-flask fa-folder fa-folder-o fa-folder-open fa-folder-open-o fa-frown-o fa-futbol-o fa-gamepad fa-gavel fa-gear (alias) fa-gears (alias) fa-gift fa-glass fa-globe fa-graduation-cap fa-group (alias) fa-hand-grab-o (alias) fa-hand-lizard-o fa-hand-paper-o fa-hand-peace-o fa-hand-pointer-o fa-hand-rock-o fa-hand-scissors-o fa-hand-spock-o fa-hand-stop-o (alias) fa-handshake-o fa-hard-of-hearing (alias) fa-hashtag fa-hdd-o fa-headphones fa-heart fa-heart-o fa-heartbeat fa-history fa-home fa-hotel (alias) fa-hourglass fa-hourglass-1 (alias) fa-hourglass-2 (alias) fa-hourglass-3 (alias) fa-hourglass-end fa-hourglass-half fa-hourglass-o fa-hourglass-start fa-i-cursor fa-id-badge fa-id-card fa-id-card-o fa-image (alias) fa-inbox fa-industry fa-info fa-info-circle fa-institution (alias) fa-key fa-keyboard-o fa-language fa-laptop fa-leaf fa-legal (alias) fa-lemon-o fa-level-down fa-level-up fa-life-bouy (alias) fa-life-buoy (alias) fa-life-ring fa-life-saver (alias) fa-lightbulb-o fa-line-chart fa-location-arrow fa-lock fa-low-vision fa-magic fa-magnet fa-mail-forward (alias) fa-mail-reply (alias) fa-mail-reply-all (alias) fa-male fa-map fa-map-marker fa-map-o fa-map-pin fa-map-signs fa-meh-o fa-microchip fa-microphone fa-microphone-slash fa-minus fa-minus-circle fa-minus-square fa-minus-square-o fa-mobile fa-mobile-phone (alias) fa-money fa-moon-o fa-mortar-board (alias) fa-motorcycle fa-mouse-pointer fa-music fa-navicon (alias) fa-newspaper-o fa-object-group fa-object-ungroup fa-paint-brush fa-paper-plane fa-paper-plane-o fa-paw fa-pencil fa-pencil-square fa-pencil-square-o fa-percent fa-phone fa-phone-square fa-photo (alias) fa-picture-o fa-pie-chart fa-plane fa-plug fa-plus fa-plus-circle fa-plus-square fa-plus-square-o fa-podcast fa-power-off fa-print fa-puzzle-piece fa-qrcode fa-question fa-question-circle fa-question-circle-o fa-quote-left fa-quote-right fa-random fa-recycle fa-refresh fa-registered fa-remove (alias) fa-reorder (alias) fa-reply fa-reply-all fa-retweet fa-road fa-rocket fa-rss fa-rss-square fa-s15 (alias) fa-search fa-search-minus fa-search-plus fa-send (alias) fa-send-o (alias) fa-server fa-share fa-share-alt fa-share-alt-square fa-share-square fa-share-square-o fa-shield fa-ship fa-shopping-bag fa-shopping-basket fa-shopping-cart fa-shower fa-sign-in fa-sign-language fa-sign-out fa-signal fa-signing (alias) fa-sitemap fa-sliders fa-smile-o fa-snowflake-o fa-soccer-ball-o (alias) fa-sort fa-sort-alpha-asc fa-sort-alpha-desc fa-sort-amount-asc fa-sort-amount-desc fa-sort-asc fa-sort-desc fa-sort-down (alias) fa-sort-numeric-asc fa-sort-numeric-desc fa-sort-up (alias) fa-space-shuttle fa-spinner fa-spoon fa-square fa-square-o fa-star fa-star-half fa-star-half-empty (alias) fa-star-half-full (alias) fa-star-half-o fa-star-o fa-sticky-note fa-sticky-note-o fa-street-view fa-suitcase fa-sun-o fa-support (alias) fa-tablet fa-tachometer fa-tag fa-tags fa-tasks fa-taxi fa-television fa-terminal fa-thermometer (alias) fa-thermometer-0 (alias) fa-thermometer-1 (alias) fa-thermometer-2 (alias) fa-thermometer-3 (alias) fa-thermometer-4 (alias) fa-thermometer-empty fa-thermometer-full fa-thermometer-half fa-thermometer-quarter fa-thermometer-three-quarters fa-thumb-tack fa-thumbs-down fa-thumbs-o-down fa-thumbs-o-up fa-thumbs-up fa-ticket fa-times fa-times-circle fa-times-circle-o fa-times-rectangle (alias) fa-times-rectangle-o (alias) fa-tint fa-toggle-down (alias) fa-toggle-left (alias) fa-toggle-off fa-toggle-on fa-toggle-right (alias) fa-toggle-up (alias) fa-trademark fa-trash fa-trash-o fa-tree fa-trophy fa-truck fa-tty fa-tv (alias) fa-umbrella fa-universal-access fa-university fa-unlock fa-unlock-alt fa-unsorted (alias) fa-upload fa-user fa-user-circle fa-user-circle-o fa-user-o fa-user-plus fa-user-secret fa-user-times fa-users fa-vcard (alias) fa-vcard-o (alias) fa-video-camera fa-volume-control-phone fa-volume-down fa-volume-off fa-volume-up fa-warning (alias) fa-wheelchair fa-wheelchair-alt fa-wifi fa-window-close fa-window-close-o fa-window-maximize fa-window-minimize fa-window-restore fa-wrench Accessibility Icons fa-american-sign-language-interpreting fa-asl-interpreting (alias) fa-assistive-listening-systems fa-audio-description fa-blind fa-braille fa-cc fa-deaf fa-deafness (alias) fa-hard-of-hearing (alias) fa-low-vision fa-question-circle-o fa-sign-language fa-signing (alias) fa-tty fa-universal-access fa-volume-control-phone fa-wheelchair fa-wheelchair-alt Hand Icons fa-hand-grab-o (alias) fa-hand-lizard-o fa-hand-o-down fa-hand-o-left fa-hand-o-right fa-hand-o-up fa-hand-paper-o fa-hand-peace-o fa-hand-pointer-o fa-hand-rock-o fa-hand-scissors-o fa-hand-spock-o fa-hand-stop-o (alias) fa-thumbs-down fa-thumbs-o-down fa-thumbs-o-up fa-thumbs-up Transportation Icons fa-ambulance fa-automobile (alias) fa-bicycle fa-bus fa-cab (alias) fa-car fa-fighter-jet fa-motorcycle fa-plane fa-rocket fa-ship fa-space-shuttle fa-subway fa-taxi fa-train fa-truck fa-wheelchair fa-wheelchair-alt Gender Icons fa-genderless fa-intersex (alias) fa-mars fa-mars-double fa-mars-stroke fa-mars-stroke-h fa-mars-stroke-v fa-mercury fa-neuter fa-transgender fa-transgender-alt fa-venus fa-venus-double fa-venus-mars File Type Icons fa-file fa-file-archive-o fa-file-audio-o fa-file-code-o fa-file-excel-o fa-file-image-o fa-file-movie-o (alias) fa-file-o fa-file-pdf-o fa-file-photo-o (alias) fa-file-picture-o (alias) fa-file-powerpoint-o fa-file-sound-o (alias) fa-file-text fa-file-text-o fa-file-video-o fa-file-word-o fa-file-zip-o (alias) Spinner Icons fa-circle-o-notch fa-cog fa-gear (alias) fa-refresh fa-spinner Form Control Icons fa-check-square fa-check-square-o fa-circle fa-circle-o fa-dot-circle-o fa-minus-square fa-minus-square-o fa-plus-square fa-plus-square-o fa-square fa-square-o Payment Icons fa-cc-amex fa-cc-diners-club fa-cc-discover fa-cc-jcb fa-cc-mastercard fa-cc-paypal fa-cc-stripe fa-cc-visa fa-credit-card fa-credit-card-alt fa-google-wallet fa-paypal Chart Icons fa-area-chart fa-bar-chart fa-bar-chart-o (alias) fa-line-chart fa-pie-chart Currency Icons fa-bitcoin (alias) fa-btc fa-cny (alias) fa-dollar (alias) fa-eur fa-euro (alias) fa-gbp fa-gg fa-gg-circle fa-ils fa-inr fa-jpy fa-krw fa-money fa-rmb (alias) fa-rouble (alias) fa-rub fa-ruble (alias) fa-rupee (alias) fa-shekel (alias) fa-sheqel (alias) fa-try fa-turkish-lira (alias) fa-usd fa-won (alias) fa-yen (alias) Text Editor Icons fa-align-center fa-align-justify fa-align-left fa-align-right fa-bold fa-chain (alias) fa-chain-broken fa-clipboard fa-columns fa-copy (alias) fa-cut (alias) fa-dedent (alias) fa-eraser fa-file fa-file-o fa-file-text fa-file-text-o fa-files-o fa-floppy-o fa-font fa-header fa-indent fa-italic fa-link fa-list fa-list-alt fa-list-ol fa-list-ul fa-outdent fa-paperclip fa-paragraph fa-paste (alias) fa-repeat fa-rotate-left (alias) fa-rotate-right (alias) fa-save (alias) fa-scissors fa-strikethrough fa-subscript fa-superscript fa-table fa-text-height fa-text-width fa-th fa-th-large fa-th-list fa-underline fa-undo fa-unlink (alias) Directional Icons fa-angle-double-down fa-angle-double-left fa-angle-double-right fa-angle-double-up fa-angle-down fa-angle-left fa-angle-right fa-angle-up fa-arrow-circle-down fa-arrow-circle-left fa-arrow-circle-o-down fa-arrow-circle-o-left fa-arrow-circle-o-right fa-arrow-circle-o-up fa-arrow-circle-right fa-arrow-circle-up fa-arrow-down fa-arrow-left fa-arrow-right fa-arrow-up fa-arrows fa-arrows-alt fa-arrows-h fa-arrows-v fa-caret-down fa-caret-left fa-caret-right fa-caret-square-o-down fa-caret-square-o-left fa-caret-square-o-right fa-caret-square-o-up fa-caret-up fa-chevron-circle-down fa-chevron-circle-left fa-chevron-circle-right fa-chevron-circle-up fa-chevron-down fa-chevron-left fa-chevron-right fa-chevron-up fa-exchange fa-hand-o-down fa-hand-o-left fa-hand-o-right fa-hand-o-up fa-long-arrow-down fa-long-arrow-left fa-long-arrow-right fa-long-arrow-up fa-toggle-down (alias) fa-toggle-left (alias) fa-toggle-right (alias) fa-toggle-up (alias) Video Player Icons fa-arrows-alt fa-backward fa-compress fa-eject fa-expand fa-fast-backward fa-fast-forward fa-forward fa-pause fa-pause-circle fa-pause-circle-o fa-play fa-play-circle fa-play-circle-o fa-random fa-step-backward fa-step-forward fa-stop fa-stop-circle fa-stop-circle-o fa-youtube-play Brand Icons fa-500px fa-adn fa-amazon fa-android fa-angellist fa-apple fa-bandcamp fa-behance fa-behance-square fa-bitbucket fa-bitbucket-square fa-bitcoin (alias) fa-black-tie fa-bluetooth fa-bluetooth-b fa-btc fa-buysellads fa-cc-amex fa-cc-diners-club fa-cc-discover fa-cc-jcb fa-cc-mastercard fa-cc-paypal fa-cc-stripe fa-cc-visa fa-chrome fa-codepen fa-codiepie fa-connectdevelop fa-contao fa-css3 fa-dashcube fa-delicious fa-deviantart fa-digg fa-dribbble fa-dropbox fa-drupal fa-edge fa-eercast fa-empire fa-envira fa-etsy fa-expeditedssl fa-fa (alias) fa-facebook fa-facebook-f (alias) fa-facebook-official fa-facebook-square fa-firefox fa-first-order fa-flickr fa-font-awesome fa-fonticons fa-fort-awesome fa-forumbee fa-foursquare fa-free-code-camp fa-ge (alias) fa-get-pocket fa-gg fa-gg-circle fa-git fa-git-square fa-github fa-github-alt fa-github-square fa-gitlab fa-gittip (alias) fa-glide fa-glide-g fa-google fa-google-plus fa-google-plus-circle (alias) fa-google-plus-official fa-google-plus-square fa-google-wallet fa-gratipay fa-grav fa-hacker-news fa-houzz fa-html5 fa-imdb fa-instagram fa-internet-explorer fa-ioxhost fa-joomla fa-jsfiddle fa-lastfm fa-lastfm-square fa-leanpub fa-linkedin fa-linkedin-square fa-linode fa-linux fa-maxcdn fa-meanpath fa-medium fa-meetup fa-mixcloud fa-modx fa-odnoklassniki fa-odnoklassniki-square fa-opencart fa-openid fa-opera fa-optin-monster fa-pagelines fa-paypal fa-pied-piper fa-pied-piper-alt fa-pied-piper-pp fa-pinterest fa-pinterest-p fa-pinterest-square fa-product-hunt fa-qq fa-quora fa-ra (alias) fa-ravelry fa-rebel fa-reddit fa-reddit-alien fa-reddit-square fa-renren fa-resistance (alias) fa-safari fa-scribd fa-sellsy fa-share-alt fa-share-alt-square fa-shirtsinbulk fa-simplybuilt fa-skyatlas fa-skype fa-slack fa-slideshare fa-snapchat fa-snapchat-ghost fa-snapchat-square fa-soundcloud fa-spotify fa-stack-exchange fa-stack-overflow fa-steam fa-steam-square fa-stumbleupon fa-stumbleupon-circle fa-superpowers fa-telegram fa-tencent-weibo fa-themeisle fa-trello fa-tripadvisor fa-tumblr fa-tumblr-square fa-twitch fa-twitter fa-twitter-square fa-usb fa-viacoin fa-viadeo fa-viadeo-square fa-vimeo fa-vimeo-square fa-vine fa-vk fa-wechat (alias) fa-weibo fa-weixin fa-whatsapp fa-wikipedia-w fa-windows fa-wordpress fa-wpbeginner fa-wpexplorer fa-wpforms fa-xing fa-xing-square fa-y-combinator fa-y-combinator-square (alias) fa-yahoo fa-yc (alias) fa-yc-square (alias) fa-yelp fa-yoast fa-youtube fa-youtube-play fa-youtube-square "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/image/",
	"title": "image",
	"tags": [],
	"description": "",
	"content": "Les images ont une syntaxe similaire aux liens mais sont précédées d&amp;rsquo;un point d&amp;rsquo;exclamation. ![agence](https://github.com/vjeantet/vjeantet.fr/raw/master/static/images/sgthon/C.jpg) Retailler une image Ajoutez des paramètres HTTP width et/ou height au lien image pour retailler l&amp;rsquo;image. Les valeurs sont des valeurs CSS (par défaut auto). ![Hackathon](https://github.com/vjeantet/vjeantet.fr/raw/master/static/images/sgthon/C.jpg?height=80px) Ajout de classes CSS Ajoutez un param HTTP classes au lien image pour ajouter des classes CSS. shadow et border sont disponibles mais vous pourriez en définir d&amp;rsquo;autres. ![agence](https://github.com/vjeantet/vjeantet.fr/raw/master/static/images/sgthon/C.jpg?classes=border,shadow) "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/mermaid/",
	"title": "mermaid",
	"tags": [],
	"description": "",
	"content": "Exemple GANTT {{&amp;lt;mermaid&amp;gt;}} gantt dateFormat YYYY-MM-DD title Ajout fonctionnalité de diagramme de GANTT à mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{&amp;lt; /mermaid &amp;gt;}} "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/notice/",
	"title": "notice",
	"tags": [],
	"description": "",
	"content": "Le raccourci notice montre 4 types d&amp;rsquo;avertissement pour vous aider à structurer votre page. Note {{% notice note %}} Un avertissement {{% /notice %}} donne Un avertissement Info {{% notice info %}} Un avertissement d&#39;information {{% /notice %}} donne Un avertissement d&amp;rsquo;information Tip {{% notice tip %}} Un avertissement pour un truc {{% /notice %}} renders as Un avertissement pour un truc Warning {{% notice warning %}} Un avertissement / warning {{% /notice %}} donne Un avertissement / warning "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/children-1/",
	"title": "page 1",
	"tags": [],
	"description": "Ceci est une démo de page enfant",
	"content": "Ceci est une démo de page enfant "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/children-2/",
	"title": "page 2",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/children-3/",
	"title": "page 3",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/children-4/",
	"title": "page 4",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/panel/",
	"title": "panel",
	"tags": [],
	"description": "",
	"content": "Le raccourci panel Vous permet de mettre en valeur l&amp;rsquo;information ou la placer dans une boîte. Cela crée une boîte colorée entourant votre texte Usage Paramètre par défaut Description header none Le titre du panel. Si spécifié, ce titre sera affiché dans sa propre ligne de titre. footer none le pied de page du panel. Si spécifié, ce texte sera affiché dans sa propre ligne. theme primary default,primary,info,success,warning,danger Exemple basique : Par défaut : {{% panel %}}ceci est un texte panel{{% /panel %}} ceci est un texte panel Panel avec titre Ajoutez facilement un conteneur de titre à votre panel avec le paramètre header. Vous pouvez appliquer n&amp;rsquo;importe quel thème. {{% panel theme=&amp;quot;danger&amp;quot; header=&amp;quot;titre panel&amp;quot; %}}ceci est un texte panel{{% /panel %}} {{% panel theme=&amp;ldquo;danger&amp;rdquo; header=&amp;ldquo;titre panel&amp;rdquo; %}}ceci est un texte panel{{% /panel %}} {{% panel theme=&amp;quot;success&amp;quot; header=&amp;quot;titre panel&amp;quot; %}}ceci est un texte panel{{% /panel %}} titre panel ceci est un texte panel Panel avec footer Emballe un texte secondaire dans le footer. {{% panel footer=&amp;quot;panel footer&amp;quot; %}}Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.{{% /panel %}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. pied de panel Thèmes thème Success ceci est un texte panel thème default ceci est un texte panel thème info ceci est un texte panel thème warning ceci est un texte panel thème danger ceci est un texte panel "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/shortcode/revealjs/",
	"title": "revealjs",
	"tags": [],
	"description": "présente le contenu sous forme d&#39;une slide reveal.js",
	"content": "Ce raccourci code met en forme le markdown embarqué pour le restituer avec reveal.js en runtime (côté-client) Lisez en plus à ce sujet sur le dépôt github revealjs. Usage revealjs peut utiliser les paramètres nommés suivants : theme transition controls progress history center Important Même si le contenu entouré est du markdown, utilisez la notation shortcode &amp;lt; au lieu de la notation % Mise en page du contenu et délimiteur de slides en savoir plus ici Démo # Le matin ___ ## Se lever - Éteindre le réveil - Sortir du lit ___ ## Breakfast - Manger deux oeufs - Boire du café --- # Soirée ___ ## Dîner - Manger un spaghetti - Boire du vin ___ ## Aller dormir - Aller au lit - Compter les moutons function initSlides() { Reveal.initialize({ embedded : true, controls : false, center: true , history: false , progress: &#34;true&#34; , transition: &#34;concave&#34;, dependencies: [ { src: &#39;\/Users\/xtof\/Sites\/Hugo\/themes-docdock-learn\/doc-docdock\/public\/revealjs\/lib\/js\/classList.js&#34;&#39;, condition: function() { return !document.body.classList; } }, { src: &#39;\/Users\/xtof\/Sites\/Hugo\/themes-docdock-learn\/doc-docdock\/public\/revealjs\/plugin\/markdown\/marked.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } }, { src: &#39;\/Users\/xtof\/Sites\/Hugo\/themes-docdock-learn\/doc-docdock\/public\/revealjs\/plugin\/markdown\/markdown.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } }, { src: &#39;\/Users\/xtof\/Sites\/Hugo\/themes-docdock-learn\/doc-docdock\/public\/revealjs\/plugin\/highlight\/highlight.js&#39;, async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: &#39;\/Users\/xtof\/Sites\/Hugo\/themes-docdock-learn\/doc-docdock\/public\/revealjs\/plugin\/zoom-js\/zoom.js&#39;, async: true, condition: function() { return !!document.body.classList; } }, { src: &#39;\/Users\/xtof\/Sites\/Hugo\/themes-docdock-learn\/doc-docdock\/public\/revealjs\/plugin\/notes\/notes.js&#39;, async: true, condition: function() { return !!document.body.classList; } } ] }); } Voir en plein écran var toto = document.getElementById(&#39;slideContent&#39;).innerHTML document.getElementById(&#39;slideFrame&#39;).contentWindow.document.write(document.getElementById(&#39;slideContent&#39;).innerHTML); document.getElementById(&#39;slideContent&#39;).remove(); document.addEventListener(&#34;DOMContentLoaded&#34;,function(){ setTimeout(function () { document.getElementById(&#39;slideFrame&#39;).contentWindow.initSlides() ; }, 2000); }); function slideFullScreen() { document.open(); document.write(toto); document.close(); initSlides() } Source : cliquez ici pour voir le contenu brut "
},
{
	"uri": "/Users/xtof/Sites/Hugo/themes-docdock-learn/doc-docdock/public/search/",
	"title": "À Propos du Moteur de Recherche",
	"tags": [],
	"description": "",
	"content": "Rien à faire vous concernant. :-) Le thème Docdock utilise la dernière amélioration disponible dans Hugo version 20+ pour générer un fichier index json à consommer par le moteur de recherche javascript lunr.js. "
}]